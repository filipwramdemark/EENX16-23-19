import matplotlib.pyplot as plt
import pandas as pd
import numpy as np

acc = pd.read_csv('tests/test1/acc_test1.csv', header=None).values.tolist()

x_acc = []
y_acc = []
z_acc = []

for i in range(len(acc)):
    if abs(acc[i][0]) < 100000:
        if i % 3 == 0:
            x_acc.append(acc[i][0])
        elif i % 3 == 1:
            y_acc.append(acc[i][0])
        else: 
            z_acc.append(acc[i][0])

#fc = 0.1
#b = 0.08
#N = int(np.ceil((4 / b)))
#if not N % 2: N += 1
#n = np.arange(N)

#sinc_func = np.sinc(2 * fc * (n - (N - 1) / 2.))
#window = 0.42 - 0.5 * np.cos(2 * np.pi * n / (N - 1)) + 0.08 * np.cos(4 * np.pi * n / (N - 1))
#sinc_func = sinc_func * window
#sinc_func = sinc_func / np.sum(sinc_func)

#new_signal = np.convolve(x_acc, sinc_func)


fc = 0.1
b = 0.08
N = int(np.ceil((4 / b)))
if not N % 2: N += 1
n = np.arange(N)

sinc_func = np.sinc(2 * fc * (n - (N - 1) / 2.))
window = np.blackman(N)
sinc_func = sinc_func * window
sinc_func = sinc_func / np.sum(sinc_func)

# reverse function
sinc_func = -sinc_func
sinc_func[int((N - 1) / 2)] += 1

new_signal = np.convolve(x_acc, sinc_func)

plt.figure("x_acc")
plt.xlabel("Datapunkt")
plt.ylabel("Acceleration (g m/s^2)")
plt.plot(new_signal)

plt.figure("x_acc")
plt.xlabel("Datapunkt")
plt.ylabel("Acceleration (g m/s^2)")
#plt.plot(x_acc)

plt.show()

